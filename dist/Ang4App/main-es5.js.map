{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/gallery/gallery.component.ts","webpack:///src/app/gallery/gallery.component.html","webpack:///src/environments/environment.ts","webpack:///src/gallery.service.ts","webpack:///src/main.ts","webpack:///src/services/about.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","aboutService","comments","commentaire","date","Date","message","info","getInfo","getAllComments","c","addComment","onAddCommantaire","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","contact","name","email","path","component","redirectTo","pathMatch","AppModule","declarations","providers","bootstrap","ContactComponent","GalleryComponent","galleryService","currentPage","size","pages","motCle","dataF","onSearch","subscribe","data","console","log","pagePhotos","totalPages","totalHits","Array","error1","i","environment","production","GalleryService","http","page","get","bootstrapModule","err","error","AboutService","nom","tel","push"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {AboutService} from \"../../services/about.service\";\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n\n  info:any;\n  comments=[];\n  commentaire={date:new Date(),message:\"\"};\n\n\n  constructor(private aboutService:AboutService) {\n\n    this.info = this.aboutService.getInfo();\n    this.comments = this.aboutService.getAllComments();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onAddCommantaire(c){\n//    this.commentaire.date = new Date();\n    this.aboutService.addComment(c);\n    this.comments = this.aboutService.getAllComments();\n    this.commentaire.message=\"\";\n\n    // this.comments.push(c);\n  //  this.commentaire={date:new Date(),message:\"\"};\n  }\n}\n","\n<div class=\"container\">\n\n  <div class=\"card\">\n      <div class=\"card-header\">About</div>\n      <div class=\"card-body\">\n      <div>\n        <h3>INFOS : </h3>\n\n\n        <ul class=\"list-group\">\n\n          <li class=\"list-group-item\">Nom:<strong>{{info.nom}}</strong></li>\n\n          <li class=\"list-group-item\">email:<strong>{{info.email}}</strong></li>\n\n          <li class=\"list-group-item\">Tel:<strong>{{info.tel}}</strong></li>\n\n        </ul>\n      </div>\n\n        <form #f=\"ngForm\" (ngSubmit)=\"onAddCommantaire(f.value)\">\n          <form></form>\n          <div class=\"form-group\">\n            <label class=\"control-label\">Message: </label>\n\n            <input required=\"\"  name=\"message\" ngModel type=\"text\" [(ngModel)]=\"commentaire.message\">\n            <button [disabled]=\"!f.valid\" class=\"btn btn-primary\" type=\"submit\">Ajouter un commentaire</button>\n          </div>\n\n        </form>\n\n\n      <div>\n        <h3>Commentaires : </h3>\n          <ul class=\"list-group\">\n              <li  *ngFor=\"let c of comments\" class=\"list-group-item\">\n\n                {{c.message}},\n\n                <span class=\"badge\">{{c.date|date:'dd/MM/yyyy:HH:mm:ss'}}</span>\n\n          </li>\n        </ul>\n      </div>\n\n</div>\n  </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ang4App';\n\n  contact ={\n    name: \"Oussama\",\n\n    email: \"oussamalaglil@gmail.com\"\n  }\n}\n","\n\n<p></p>\n<div class=\"container\">\n\n  <button routerLink=\"/about\" class=\"btn btn-primary\">About</button>\n  <button routerLink=\"/contact\" class=\"btn btn-primary\">Contact</button>\n  <button routerLink=\"/gallery\" class=\"btn btn-primary\">Gallery</button>\n\n<p></p>\n<div>\n  <router-outlet>\n\n  </router-outlet>\n\n</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from './contact/contact.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {AboutService} from \"../services/about.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {GalleryService} from \"../gallery.service\";\n\nconst routes:Routes = [\n  {path:'about',component:AboutComponent},\n  {path:'contact', component:ContactComponent},\n  {path:'gallery',component:GalleryComponent},\n  {path:'', redirectTo:'/about',pathMatch:'full'}\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    ContactComponent,\n    GalleryComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n  ],\n  providers: [AboutService,GalleryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport {GalleryService} from \"../../gallery.service\";\n\n\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n\n  pagePhotos:any;\n  currentPage:number=1;\n  size:number=5;\n  pages:Array<number>=[];\n  totalPages:number;\n  motCle:string=\"\";\n  constructor(private galleryService:GalleryService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSearch(dataF){\n\n\n   this.galleryService.onSearch(dataF.motCle,this.size,this.currentPage)\n      .subscribe(data=>{\n        console.log(data);\n        this.pagePhotos = data;\n        this.totalPages = this.pagePhotos.totalHits/this.size;\n\n        if(this.pagePhotos.totalHits%this.size != 0 ) this.totalPages++;\n\n        this.pages = new Array<number>(this.totalPages);\n\n\n\n      },error1 => {\n        console.log(error1);\n        })\n\n\n\n\n  }\n  goTo(i){\n    this.currentPage= i+1 ;\n\n    this.onSearch({motCle:this.motCle})\n\n  }\n\n}\n","\n<div class=\"card\">\n\n  <div class=\"card-header\">Gallery Component</div>\n\n  <div class=\"card-body\">\n\n    <form #f=\"ngForm\" (ngSubmit)=\"onSearch(f.value)\">\n\n      <div class=\"form-group\">\n\n        <label>Mot Clé : </label>\n\n        <input type=\"text\" name=\"motCle\" ngModel required [(ngModel)]=\"motCle\">\n\n        <button type=\"submit\" class=\"btn btn-primary\">Chercher</button>\n\n      </div>\n\n    </form>\n\n    <div class=\"row\">\n          <div *ngFor=\"let p of pagePhotos?.hits\" class=\"col-md-4\">\n            <div class=\"card cadre\">\n\n                <div class=\"card-header\">\n                  <img class=\"rounded-circle\" src=\"{{p.userImageURL}}\" width=\"50\" height=\"50\">\n                  {{p.user}}\n                </div>\n                <div class=\"card-body\">\n\n                  <img src=\"{{p.previewURL}}\">\n\n                </div>\n              </div>\n          </div>\n    </div>\n  </div>\n<div class=\"card-footer\">\n    <div class=\"row\">\n      <ul class=\"nav nav-pills\">\n        <li [ngClass]=\"{'active':currentPage==(i+1)}\" class=\"clickable\" *ngFor=\"let page of pages; let i = index\">\n          <button (click)=\"goTo(i)\"> {{i}} </button>\n        </li>\n      </ul>\n    </div>\n\n</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class GalleryService {\n\n  constructor(private http:HttpClient) {\n  }\n\n\n  onSearch(motCle:string, size:number, page:number) {\n   return this.http.get(\"https://pixabay.com/api/?key=15901790-879c49f35bf9cc7ebb0244789&q=\"+\n      motCle+\"+&per_page=\"+size+\"&&page=\"+page);\n  }\n\n}\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {Injectable} from \"@angular/core\";\n\n@Injectable()\n\nexport class AboutService{\n\n\n  info={\n    nom:\"Oussama\",\n    email:\"oussama@gmail.com\",\n    tel:673667309\n  }\n\n  comments=[\n    {date:new Date(),message:\"A\"},\n    {date:new Date(),message:\"B\"},\n    {date:new Date(),message:\"C\"}\n  ];\n\n  addComment(c){\n    c.date = new Date();\n    this.comments.push(c);\n\n  }\n\n  getAllComments(){\n    return this.comments;\n  }\n\n  getInfo(){\n    return this.info;\n  }\n}\n"]}